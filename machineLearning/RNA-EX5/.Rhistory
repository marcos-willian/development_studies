}
#Problema para base 2
png("IMG/b2-amostras.png")
plot(base2$x,
col = cores[base2$classes + 1],
xlab = "x1",
ylab = "x2",
main = "Amostras base 2")
dev.off()
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 5, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
png(paste("IMG/b2-sep-p=", p, ".png",sep = ""))
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
dev.off()
base2 = mlbench.xor(100)
base2$classes = ifelse(base2$classes == 1, 1, -1)
plot(base2$x,
col = cores[base2$classes + 1],
xlab = "x1",
ylab = "x2",
main = "Amostras base 2")
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2)],
xlab = "x1",
ylab = "x2",
main = "Amostras base 2")
dev.off()
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2)],
xlab = "x1",
ylab = "x2",
main = "Amostras base 2")
modeloELM =  treinaELM(base2$x, base2$classes, 5, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 10, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
modeloELM =  treinaELM(base2$x, base2$classes, 20, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 20, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 30, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
modeloELM =  treinaELM(base2$x, base2$classes, 40, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
modeloELM =  treinaELM(base2$x, base2$classes, 30, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
modeloELM =  treinaELM(base2$x, base2$classes, 20, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 20, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
modeloELM =  treinaELM(base2$x, base2$classes, 22, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
modeloELM =  treinaELM(base2$x, base2$classes, 19, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 19, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 19, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 18, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 21, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 20, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-2, 2),
ylim = c(-2, 2),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-2, 2),
ylim = c(-2, 2),
lwd = 2)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
#p = 10, 20, 30
for(p in c(10, 20, 30)){
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 20, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
png(paste("IMG/b2-sep-p=", p, ".png",sep = ""))
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
dev.off()
}
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2)],
xlab = "x1",
ylab = "x2",
main = "Amostras base 2")
#Problema para base 2
png("IMG/b2-amostras.png")
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2)],
xlab = "x1",
ylab = "x2",
main = "Amostras base 2")
dev.off()
#p = 10, 20, 30
for(p in c(10, 20, 30)){
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 20, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
png(paste("IMG/b2-sep-p=", p, ".png",sep = ""))
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
dev.off()
}
#Problema para base 2
png("IMG/b2-amostras.png")
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2)],
xlab = "x1",
ylab = "x2",
main = "Amostras base 2")
dev.off()
#p = 10, 20, 30
for(p in c(10, 20, 30)){
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, 20, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
png(paste("IMG/b2-sep-p=", p, ".png",sep = ""))
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
dev.off()
}
#p = 10, 20, 30
for(p in c(10, 20, 30)){
set.seed(0)
modeloELM =  treinaELM(base2$x, base2$classes, p, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
png(paste("IMG/b2-sep-p=", p, ".png",sep = ""))
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
dev.off()
}
modeloELM =  treinaELM(base2$x, base2$classes, 5, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base2$x,
col = cores[ifelse(base2$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 2 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
plot(base3$x,
col = cores[ifelse(base3$classes == 1, 1, 2)],
xlab = "x1",
ylab = "x2",
main = "Amostras base 3")
set.seed(0)
modeloELM =  treinaELM(base3$x, base3$classes, p, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
base3 = mlbench.circle(100)
base3$classes = ifelse(base3$classes == 1, 1, -1)
base4 = mlbench.spirals(100,sd = 0.05)
base4$classes = ifelse(base4$classes == 1, 1, -1)
plot(base3$x,
col = cores[ifelse(base3$classes == 1, 1, 2)],
xlab = "x1",
ylab = "x2",
main = "Amostras base 3")
set.seed(0)
modeloELM =  treinaELM(base3$x, base3$classes, p, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base3$x,
col = cores[ifelse(base3$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 3 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
plot(base4$x,
col = cores[ifelse(base4$classes == 1, 1, 2)],
xlab = "x1",
ylab = "x2",
main = "Amostras base 4")
set.seed(0)
modeloELM =  treinaELM(base4$x, base4$classes, p, T)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base4$x,
col = cores[ifelse(base4$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 4 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
x = seq(-5, 5, length.out = 200)
grid = expand.grid(x, x)
xgrid = cbind(grid$Var1, grid$Var2)
Y = ELM(xgrid, modeloELM$Z, modeloELM$W, T)
plot(base4$x,
col = cores[ifelse(base4$classes == 1, 1, 2) ],
xlab = "x1",
ylab = "x2",
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
main = paste("Superficie de separação base 4 - p = ", p, sep = ""))
contour(x, x,
matrix(Y, nrow = length(x), ncol = length(x)),
add = T,
drawlabels = FALSE,
nlevels = 1,
xlim = c(-1.5, 1.5),
ylim = c(-1.5, 1.5),
lwd = 2)
