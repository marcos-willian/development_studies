rm(list = ls())
library('corpcor')
funcGeradora <- function(xin){
return(0.5*xin^2 + 3*xin + 10)
}
xgrid = seq(from = -15, to = 10, by = 0.1)
NumAmos = 20
X = runif(n = NumAmos, min = -15, max = 10)
Y = funcGeradora(X) + rnorm(length((X)), mean = 0, sd = 4)
for(p in 1:8){
H = c(1);
Hgrid = c(1);
for(i in 1:p){
H = cbind(X^i, H);
Hgrid = cbind(xgrid^i, Hgrid);
}
w = pseudoinverse(H) %*% Y;
png(paste("IMG/20-",p,".png",sep = ""))
plot(X, Y, pch = 19, col = "black", new = T, main = paste("(20 amostras) Aproximação com grau ", p))
lines(xgrid, funcGeradora(xgrid), col = "blue", lwd = 2)
lines(xgrid, Hgrid %*% w, col = "red", lwd = 2)
legend(x = "top",
y = "center",
legend = c("Amostras", "Função geradora", "Modelo"),
col = c("black", "blue", "red"),
pch = c(19, NA, NA),
lty = c(NA, 1, 1),
lwd = 3,
bty = "n")
dev.off()
}
rm(list = ls())
library('corpcor')
funcGeradora <- function(xin){
return(0.5*xin^2 + 3*xin + 10)
}
xgrid = seq(from = -15, to = 10, by = 0.1)
NumAmos = 100
X = runif(n = NumAmos, min = -15, max = 10)
Y = funcGeradora(X) + rnorm(length((X)), mean = 0, sd = 4)
for(p in 1:8){
H = c(1);
Hgrid = c(1);
for(i in 1:p){
H = cbind(X^i, H);
Hgrid = cbind(xgrid^i, Hgrid);
}
w = pseudoinverse(H) %*% Y;
png(paste("IMG/100-",p,".png",sep = ""))
plot(X, Y, pch = 19, col = "black", new = T, main = paste("(100 amostras) Aproximação com grau ", p))
lines(xgrid, funcGeradora(xgrid), col = "blue", lwd = 2)
lines(xgrid, Hgrid %*% w, col = "red", lwd = 2)
legend(x = "top",
y = "center",
legend = c("Amostras", "Função geradora", "Modelo"),
col = c("black", "blue", "red"),
pch = c(19, NA, NA),
lty = c(NA, 1, 1),
lwd = 3,
bty = "n")
dev.off()
}
plot(grid)
x = seq(-1, 1, by = 0.1)
y = seq(-1, 1, by = 0.1)
grid = expand.grid(x, y)
plot(grid)
circle <- function(x, y) {
return(sqrt(x^2 + y^2))
}
raio = 0.6
classe = as.factor(circle(grid$Var1, grid$Var2)>raio)
plot(grid, col = classe)
H =  cbind(sin(grid$var1), cos(grid$Var2))
grid$var1
H =  cbind(sin(grid$Var1), cos(grid$Var2))
plot(H, col = classe)
H =  cbind(cos(grid$Var1), sin(grid$Var2))
plot(H, col = classe)
H =  cbind(sin(grid$Var1), sin(grid$Var2))
plot(H, col = classe)
H =  cbind(sin(grid$Var1) + cos(grid$Var2), cos(grid$Var1) + sin(grid$Var2))
plot(H, col = classe)
H =  cbind(sin(grid$Var1)^2 + cos(grid$Var2)^2, cos(grid$Var1)^2 + sin(grid$Var2)^2)
plot(H, col = classe)
H =  cbind((grid$Var1^2 + grid$Var2^2) < 6)
plot(H, col = classe)
H =  cbind((grid$Var1^2 + grid$Var2^2) < 6, (grid$Var1^2 + grid$Var2^2) > 6)
plot(H, col = classe)
H =  cbind((grid$Var1^2 + grid$Var2^2) < raio, (grid$Var1^2 + grid$Var2^2) > raio)
plot(H, col = classe)
View(H)
H =  cbind(grid$Var1^2 + grid$Var2^2) < raio)
plot(H, col = classe)
H =  cbind((grid$Var1^2 + grid$Var2^2) < raio)
plot(H, col = classe)
H =  cbind((grid$Var1^2 + grid$Var2^2) < raio^2)
plot(H, col = classe)
H =  cbind((grid$Var1^2 + grid$Var2^2) <= raio^2)
plot(H, col = classe)
H =  cbind((grid$Var1^2 + grid$Var2^2) -raio^2)
plot(H, col = classe)
H =  cbind(degrau((grid$Var1^2 + grid$Var2^2) - raio^2))
degrau <- function(x, limiar){
if(x < limiar)
return(0)
else if(x >= limiar)
return(1)
}
H =  cbind(degrau((grid$Var1^2 + grid$Var2^2) - raio^2))
H =  cbind(degrau(((grid$Var1^2 + grid$Var2^2) - raio^2), limiar = 0))
degrau(((grid$Var1^2 + grid$Var2^2) - raio^2), limiar = 0)
degrau <- function(x, limiar){
as.numeric(x>=limiar)
}
degrau(((grid$Var1^2 + grid$Var2^2) - raio^2), limiar = 0)
H =  cbind(degrau(((grid$Var1^2 + grid$Var2^2) - raio^2), limiar = 0))
plot(H, col = classe)
H =  cbind(degrau(((grid$Var1^2 + grid$Var2^2)), limiar = raio))
degrau(((grid$Var1^2 + grid$Var2^2)), limiar = raio)
plot(H, col = classe)
H =  cbind(degrau(((grid$Var1^2 + grid$Var2^2)), limiar = raio^2))
plot(H, col = classe)
degrau <- function(x, limiar){
as.numeric(x > limiar)
}
H =  cbind(degrau(((grid$Var1^2 + grid$Var2^2)), limiar = raio^2))
H =  cbind(degrau(((grid$Var1^2 + grid$Var2^2)), limiar = raio^2-0.1))
degrau <- function(x, limiar){
as.numeric(x >= limiar)
}
H =  cbind(degrau(((grid$Var1^2 + grid$Var2^2)), limiar = raio^2-0.1))
plot(H, col = classe)
H =  cbind(degrau(((grid$Var1^2 + grid$Var2^2)), limiar = raio^2+0.1))
plot(H, col = classe)
H =  cbind(degrau((-(grid$Var1^2 + grid$Var2^2)), limiar = -raio^2))
plot(H, col = classe)
png("IMG/Linearização")
plot(H, col = classe, main = "Linearização")
dev.off()
rm(list = ls())
x = seq(-1, 1, by = 0.1)
y = seq(-1, 1, by = 0.1)
grid = expand.grid(x, y)
circle <- function(x, y) {
return(sqrt(x^2 + y^2))
}
degrau <- function(x, limiar){
as.numeric(x >= limiar)
}
raio = 0.6
classe = as.factor(circle(grid$Var1, grid$Var2)>raio)
plot(grid, col = classe)
H =  cbind(degrau((-(grid$Var1^2 + grid$Var2^2)), limiar = -raio^2))
png("IMG/Linearização")
plot(H, col = classe, main = "Linearização")
dev.off()
png("IMG/Linearização.png")
plot(H, col = classe, main = "Linearização")
dev.off()
plot(H, col = classe, main = "Linearização", xlab = "Amostra", ylab = "saída")
png("IMG/Linearização.png")
plot(H, col = classe, main = "Linearização", xlab = "Amostra", ylab = "Saída")
dev.off()
